{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst timerBtn = document.querySelector('button[data-start]');\nconst timerInput = document.querySelector('#datetime-picker');\n\nconst daysData = document.querySelector('[data-days]');\nconst hoursData = document.querySelector('[data-hours]');\nconst minutesData = document.querySelector('[data-minutes]');\nconst secondsData = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timeInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: '\"Please choose a date in the future\"',\n      });\n      timerBtn.disabled = true;\n    } else {\n      timerBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(timerInput, options);\n\ntimerBtn.addEventListener(`click`, () => {\n  startTimer();\n  timerBtn.disabled = true;\n  timerInput.disabled = true;\n});\n\nfunction startTimer() {\n  timeInterval = setInterval(() => {\n    const currentTime = new Date();\n    const elapsedTime = userSelectedDate - currentTime;\n\n    if (elapsedTime <= 0) {\n      clearInterval(timeInterval);\n      timerInput.disabled = false;\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(elapsedTime);\n\n      daysData.textContent = addLeadingZero(days);\n      hoursData.textContent = addLeadingZero(hours);\n      minutesData.textContent = addLeadingZero(minutes);\n      secondsData.textContent = addLeadingZero(seconds);\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = value => String(value).padStart(2, 0);\n"],"names":["timerBtn","timerInput","daysData","hoursData","minutesData","secondsData","userSelectedDate","timeInterval","options","selectedDates","iziToast","flatpickr","startTimer","elapsedTime","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IAKA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAa,SAAS,cAAc,kBAAkB,EAEtDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,MAC1BI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,sCACjB,CAAO,EACDV,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAW,EAAUV,EAAYO,CAAO,EAE7BR,EAAS,iBAAiB,QAAS,IAAM,CACvCY,IACAZ,EAAS,SAAW,GACpBC,EAAW,SAAW,EACxB,CAAC,EAED,SAASW,GAAa,CACpBL,EAAe,YAAY,IAAM,CAE/B,MAAMM,EAAcP,EADA,IAAI,KAGxB,GAAIO,GAAe,EACjB,cAAcN,CAAY,EAC1BN,EAAW,SAAW,OACjB,CACL,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAW,EAE/DX,EAAS,YAAciB,EAAeL,CAAI,EAC1CX,EAAU,YAAcgB,EAAeJ,CAAK,EAC5CX,EAAY,YAAce,EAAeH,CAAO,EAChDX,EAAY,YAAcc,EAAeF,CAAO,CACjD,CACF,EAAE,GAAI,CACT,CAEA,SAASC,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAME,EAAiBE,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC"}